Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';'

    3 optional_variable: optional_variable variable
    4                  | ε

    5 optional_parameters: optional_parameters ',' parameter
    6                    | parameter
    7                    | ε

    8 variable: IDENTIFIER ':' type IS statement_

    9 parameter: IDENTIFIER ':' type

   10 type: INTEGER
   11     | BOOLEAN
   12     | REAL

   13 body: BEGIN_ statement_ END ';'

   14 statement_: statement ';'
   15           | error ';'

   16 statement: expression
   17          | REDUCE operator reductions ENDREDUCE
   18          | IF expression THEN statement_ ELSE statement_ ENDIF
   19          | CASE expression IS optional_cases OTHERS ARROW statement_ ENDCASE

   20 reductions: reductions statement_
   21           | ε

   22 optional_cases: optional_cases case
   23               | ε

   24 case: WHEN INT_LITERAL ARROW statement_

   25 operator: ADDOP
   26         | MULOP
   27         | REMOP
   28         | EXPOP

   29 expression: expression OROP and_expression
   30           | and_expression

   31 and_expression: and_expression ANDOP not_expression
   32               | not_expression

   33 not_expression: NOTOP not_expression
   34               | relation

   35 relation: relation RELOP term
   36         | term

   37 term: term ADDOP expo
   38     | term MULOP expo
   39     | term REMOP expo
   40     | expo

   41 expo: factor EXPOP expo
   42     | factor

   43 factor: '(' expression ')'
   44       | INT_LITERAL
   45       | REAL_LITERAL
   46       | BOOL_LITERAL
   47       | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 43
    ')' (41) 43
    ',' (44) 5
    ':' (58) 8 9
    ';' (59) 2 13 14 15
    error (256) 15
    IDENTIFIER (258) 2 8 9 47
    INT_LITERAL (259) 24 44
    REAL_LITERAL (260) 45
    BOOL_LITERAL (261) 46
    ADDOP (262) 25 37
    MULOP (263) 26 38
    RELOP (264) 35
    ANDOP (265) 31
    OROP (266) 29
    REMOP (267) 27 39
    EXPOP (268) 28 41
    NOTOP (269) 33
    BEGIN_ (270) 13
    BOOLEAN (271) 11
    END (272) 13
    ENDREDUCE (273) 17
    FUNCTION (274) 2
    INTEGER (275) 10
    IS (276) 8 19
    REDUCE (277) 17
    RETURNS (278) 2
    IF (279) 18
    CASE (280) 19
    WHEN (281) 24
    ARROW (282) 19 24
    OTHERS (283) 19
    ENDCASE (284) 19
    ENDIF (285) 18
    THEN (286) 18
    ELSE (287) 18
    REAL (288) 12


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    function (40)
        on left: 1
        on right: 0
    function_header (41)
        on left: 2
        on right: 1
    optional_variable (42)
        on left: 3 4
        on right: 1 3
    optional_parameters (43)
        on left: 5 6 7
        on right: 2 5
    variable (44)
        on left: 8
        on right: 3
    parameter (45)
        on left: 9
        on right: 5 6
    type (46)
        on left: 10 11 12
        on right: 2 8 9
    body (47)
        on left: 13
        on right: 1
    statement_ (48)
        on left: 14 15
        on right: 8 13 18 19 20 24
    statement (49)
        on left: 16 17 18 19
        on right: 14
    reductions (50)
        on left: 20 21
        on right: 17 20
    optional_cases (51)
        on left: 22 23
        on right: 19 22
    case (52)
        on left: 24
        on right: 22
    operator (53)
        on left: 25 26 27 28
        on right: 17
    expression (54)
        on left: 29 30
        on right: 16 18 19 29 43
    and_expression (55)
        on left: 31 32
        on right: 29 30 31
    not_expression (56)
        on left: 33 34
        on right: 31 32 33
    relation (57)
        on left: 35 36
        on right: 34 35
    term (58)
        on left: 37 38 39 40
        on right: 35 36 37 38 39
    expo (59)
        on left: 41 42
        on right: 37 38 39 40 41
    factor (60)
        on left: 43 44 45 46 47
        on right: 41 42


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER optional_parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body

    $default  reduce using rule 4 (optional_variable)

    optional_variable  go to state 6


State 4

    2 function_header: FUNCTION IDENTIFIER • optional_parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 7

    $default  reduce using rule 7 (optional_parameters)

    optional_parameters  go to state 8
    parameter            go to state 9


State 5

    0 $accept: function $end •

    $default  accept


State 6

    1 function: function_header optional_variable • body
    3 optional_variable: optional_variable • variable

    IDENTIFIER  shift, and go to state 10
    BEGIN_      shift, and go to state 11

    variable  go to state 12
    body      go to state 13


State 7

    9 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 14


State 8

    2 function_header: FUNCTION IDENTIFIER optional_parameters • RETURNS type ';'
    5 optional_parameters: optional_parameters • ',' parameter

    RETURNS  shift, and go to state 15
    ','      shift, and go to state 16


State 9

    6 optional_parameters: parameter •

    $default  reduce using rule 6 (optional_parameters)


State 10

    8 variable: IDENTIFIER • ':' type IS statement_

    ':'  shift, and go to state 17


State 11

   13 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    REDUCE        shift, and go to state 24
    IF            shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_      go to state 28
    statement       go to state 29
    expression      go to state 30
    and_expression  go to state 31
    not_expression  go to state 32
    relation        go to state 33
    term            go to state 34
    expo            go to state 35
    factor          go to state 36


State 12

    3 optional_variable: optional_variable variable •

    $default  reduce using rule 3 (optional_variable)


State 13

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 14

    9 parameter: IDENTIFIER ':' • type

    BOOLEAN  shift, and go to state 37
    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39

    type  go to state 40


State 15

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS • type ';'

    BOOLEAN  shift, and go to state 37
    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39

    type  go to state 41


State 16

    5 optional_parameters: optional_parameters ',' • parameter

    IDENTIFIER  shift, and go to state 7

    parameter  go to state 42


State 17

    8 variable: IDENTIFIER ':' • type IS statement_

    BOOLEAN  shift, and go to state 37
    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39

    type  go to state 43


State 18

   15 statement_: error • ';'

    ';'  shift, and go to state 44


State 19

   47 factor: IDENTIFIER •

    $default  reduce using rule 47 (factor)


State 20

   44 factor: INT_LITERAL •

    $default  reduce using rule 44 (factor)


State 21

   45 factor: REAL_LITERAL •

    $default  reduce using rule 45 (factor)


State 22

   46 factor: BOOL_LITERAL •

    $default  reduce using rule 46 (factor)


State 23

   33 not_expression: NOTOP • not_expression

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    '('           shift, and go to state 27

    not_expression  go to state 45
    relation        go to state 33
    term            go to state 34
    expo            go to state 35
    factor          go to state 36


State 24

   17 statement: REDUCE • operator reductions ENDREDUCE

    ADDOP  shift, and go to state 46
    MULOP  shift, and go to state 47
    REMOP  shift, and go to state 48
    EXPOP  shift, and go to state 49

    operator  go to state 50


State 25

   18 statement: IF • expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    '('           shift, and go to state 27

    expression      go to state 51
    and_expression  go to state 31
    not_expression  go to state 32
    relation        go to state 33
    term            go to state 34
    expo            go to state 35
    factor          go to state 36


State 26

   19 statement: CASE • expression IS optional_cases OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    '('           shift, and go to state 27

    expression      go to state 52
    and_expression  go to state 31
    not_expression  go to state 32
    relation        go to state 33
    term            go to state 34
    expo            go to state 35
    factor          go to state 36


State 27

   43 factor: '(' • expression ')'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    '('           shift, and go to state 27

    expression      go to state 53
    and_expression  go to state 31
    not_expression  go to state 32
    relation        go to state 33
    term            go to state 34
    expo            go to state 35
    factor          go to state 36


State 28

   13 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 54


State 29

   14 statement_: statement • ';'

    ';'  shift, and go to state 55


State 30

   16 statement: expression •
   29 expression: expression • OROP and_expression

    OROP  shift, and go to state 56

    $default  reduce using rule 16 (statement)


State 31

   30 expression: and_expression •
   31 and_expression: and_expression • ANDOP not_expression

    ANDOP  shift, and go to state 57

    $default  reduce using rule 30 (expression)


State 32

   32 and_expression: not_expression •

    $default  reduce using rule 32 (and_expression)


State 33

   34 not_expression: relation •
   35 relation: relation • RELOP term

    RELOP  shift, and go to state 58

    $default  reduce using rule 34 (not_expression)


State 34

   36 relation: term •
   37 term: term • ADDOP expo
   38     | term • MULOP expo
   39     | term • REMOP expo

    ADDOP  shift, and go to state 59
    MULOP  shift, and go to state 60
    REMOP  shift, and go to state 61

    $default  reduce using rule 36 (relation)


State 35

   40 term: expo •

    $default  reduce using rule 40 (term)


State 36

   41 expo: factor • EXPOP expo
   42     | factor •

    EXPOP  shift, and go to state 62

    $default  reduce using rule 42 (expo)


State 37

   11 type: BOOLEAN •

    $default  reduce using rule 11 (type)


State 38

   10 type: INTEGER •

    $default  reduce using rule 10 (type)


State 39

   12 type: REAL •

    $default  reduce using rule 12 (type)


State 40

    9 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 9 (parameter)


State 41

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type • ';'

    ';'  shift, and go to state 63


State 42

    5 optional_parameters: optional_parameters ',' parameter •

    $default  reduce using rule 5 (optional_parameters)


State 43

    8 variable: IDENTIFIER ':' type • IS statement_

    IS  shift, and go to state 64


State 44

   15 statement_: error ';' •

    $default  reduce using rule 15 (statement_)


State 45

   33 not_expression: NOTOP not_expression •

    $default  reduce using rule 33 (not_expression)


State 46

   25 operator: ADDOP •

    $default  reduce using rule 25 (operator)


State 47

   26 operator: MULOP •

    $default  reduce using rule 26 (operator)


State 48

   27 operator: REMOP •

    $default  reduce using rule 27 (operator)


State 49

   28 operator: EXPOP •

    $default  reduce using rule 28 (operator)


State 50

   17 statement: REDUCE operator • reductions ENDREDUCE

    $default  reduce using rule 21 (reductions)

    reductions  go to state 65


State 51

   18 statement: IF expression • THEN statement_ ELSE statement_ ENDIF
   29 expression: expression • OROP and_expression

    OROP  shift, and go to state 56
    THEN  shift, and go to state 66


State 52

   19 statement: CASE expression • IS optional_cases OTHERS ARROW statement_ ENDCASE
   29 expression: expression • OROP and_expression

    OROP  shift, and go to state 56
    IS    shift, and go to state 67


State 53

   29 expression: expression • OROP and_expression
   43 factor: '(' expression • ')'

    OROP  shift, and go to state 56
    ')'   shift, and go to state 68


State 54

   13 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 69


State 55

   14 statement_: statement ';' •

    $default  reduce using rule 14 (statement_)


State 56

   29 expression: expression OROP • and_expression

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    '('           shift, and go to state 27

    and_expression  go to state 70
    not_expression  go to state 32
    relation        go to state 33
    term            go to state 34
    expo            go to state 35
    factor          go to state 36


State 57

   31 and_expression: and_expression ANDOP • not_expression

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    '('           shift, and go to state 27

    not_expression  go to state 71
    relation        go to state 33
    term            go to state 34
    expo            go to state 35
    factor          go to state 36


State 58

   35 relation: relation RELOP • term

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 27

    term    go to state 72
    expo    go to state 35
    factor  go to state 36


State 59

   37 term: term ADDOP • expo

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 27

    expo    go to state 73
    factor  go to state 36


State 60

   38 term: term MULOP • expo

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 27

    expo    go to state 74
    factor  go to state 36


State 61

   39 term: term REMOP • expo

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 27

    expo    go to state 75
    factor  go to state 36


State 62

   41 expo: factor EXPOP • expo

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 27

    expo    go to state 76
    factor  go to state 36


State 63

    2 function_header: FUNCTION IDENTIFIER optional_parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 64

    8 variable: IDENTIFIER ':' type IS • statement_

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    REDUCE        shift, and go to state 24
    IF            shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_      go to state 77
    statement       go to state 29
    expression      go to state 30
    and_expression  go to state 31
    not_expression  go to state 32
    relation        go to state 33
    term            go to state 34
    expo            go to state 35
    factor          go to state 36


State 65

   17 statement: REDUCE operator reductions • ENDREDUCE
   20 reductions: reductions • statement_

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    ENDREDUCE     shift, and go to state 78
    REDUCE        shift, and go to state 24
    IF            shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_      go to state 79
    statement       go to state 29
    expression      go to state 30
    and_expression  go to state 31
    not_expression  go to state 32
    relation        go to state 33
    term            go to state 34
    expo            go to state 35
    factor          go to state 36


State 66

   18 statement: IF expression THEN • statement_ ELSE statement_ ENDIF

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    REDUCE        shift, and go to state 24
    IF            shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_      go to state 80
    statement       go to state 29
    expression      go to state 30
    and_expression  go to state 31
    not_expression  go to state 32
    relation        go to state 33
    term            go to state 34
    expo            go to state 35
    factor          go to state 36


State 67

   19 statement: CASE expression IS • optional_cases OTHERS ARROW statement_ ENDCASE

    $default  reduce using rule 23 (optional_cases)

    optional_cases  go to state 81


State 68

   43 factor: '(' expression ')' •

    $default  reduce using rule 43 (factor)


State 69

   13 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 13 (body)


State 70

   29 expression: expression OROP and_expression •
   31 and_expression: and_expression • ANDOP not_expression

    ANDOP  shift, and go to state 57

    $default  reduce using rule 29 (expression)


State 71

   31 and_expression: and_expression ANDOP not_expression •

    $default  reduce using rule 31 (and_expression)


State 72

   35 relation: relation RELOP term •
   37 term: term • ADDOP expo
   38     | term • MULOP expo
   39     | term • REMOP expo

    ADDOP  shift, and go to state 59
    MULOP  shift, and go to state 60
    REMOP  shift, and go to state 61

    $default  reduce using rule 35 (relation)


State 73

   37 term: term ADDOP expo •

    $default  reduce using rule 37 (term)


State 74

   38 term: term MULOP expo •

    $default  reduce using rule 38 (term)


State 75

   39 term: term REMOP expo •

    $default  reduce using rule 39 (term)


State 76

   41 expo: factor EXPOP expo •

    $default  reduce using rule 41 (expo)


State 77

    8 variable: IDENTIFIER ':' type IS statement_ •

    $default  reduce using rule 8 (variable)


State 78

   17 statement: REDUCE operator reductions ENDREDUCE •

    $default  reduce using rule 17 (statement)


State 79

   20 reductions: reductions statement_ •

    $default  reduce using rule 20 (reductions)


State 80

   18 statement: IF expression THEN statement_ • ELSE statement_ ENDIF

    ELSE  shift, and go to state 82


State 81

   19 statement: CASE expression IS optional_cases • OTHERS ARROW statement_ ENDCASE
   22 optional_cases: optional_cases • case

    WHEN    shift, and go to state 83
    OTHERS  shift, and go to state 84

    case  go to state 85


State 82

   18 statement: IF expression THEN statement_ ELSE • statement_ ENDIF

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    REDUCE        shift, and go to state 24
    IF            shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_      go to state 86
    statement       go to state 29
    expression      go to state 30
    and_expression  go to state 31
    not_expression  go to state 32
    relation        go to state 33
    term            go to state 34
    expo            go to state 35
    factor          go to state 36


State 83

   24 case: WHEN • INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 87


State 84

   19 statement: CASE expression IS optional_cases OTHERS • ARROW statement_ ENDCASE

    ARROW  shift, and go to state 88


State 85

   22 optional_cases: optional_cases case •

    $default  reduce using rule 22 (optional_cases)


State 86

   18 statement: IF expression THEN statement_ ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 89


State 87

   24 case: WHEN INT_LITERAL • ARROW statement_

    ARROW  shift, and go to state 90


State 88

   19 statement: CASE expression IS optional_cases OTHERS ARROW • statement_ ENDCASE

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    REDUCE        shift, and go to state 24
    IF            shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_      go to state 91
    statement       go to state 29
    expression      go to state 30
    and_expression  go to state 31
    not_expression  go to state 32
    relation        go to state 33
    term            go to state 34
    expo            go to state 35
    factor          go to state 36


State 89

   18 statement: IF expression THEN statement_ ELSE statement_ ENDIF •

    $default  reduce using rule 18 (statement)


State 90

   24 case: WHEN INT_LITERAL ARROW • statement_

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    REDUCE        shift, and go to state 24
    IF            shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_      go to state 92
    statement       go to state 29
    expression      go to state 30
    and_expression  go to state 31
    not_expression  go to state 32
    relation        go to state 33
    term            go to state 34
    expo            go to state 35
    factor          go to state 36


State 91

   19 statement: CASE expression IS optional_cases OTHERS ARROW statement_ • ENDCASE

    ENDCASE  shift, and go to state 93


State 92

   24 case: WHEN INT_LITERAL ARROW statement_ •

    $default  reduce using rule 24 (case)


State 93

   19 statement: CASE expression IS optional_cases OTHERS ARROW statement_ ENDCASE •

    $default  reduce using rule 19 (statement)
